# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    open_weather_api_key: '%env(OPEN_WEATHER_API_KEY)%'
    open_weather_endpoint: '%env(OPEN_WEATHER_ENDPOINT)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Api\Weather:
        arguments:
            - '@http_client'
            - '@serializer'
            - '%env(OPEN_WEATHER_ENDPOINT)%'
            - '%env(OPEN_WEATHER_API_KEY)%'

    App\Listeners\AuthenticationSuccessListener:
        arguments: ['%lexik_jwt_authentication.token_ttl%']
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess, priority: -2 }